// Copyright (c) 2022 Nordic Semiconductor ASA
// SPDX-License-Identifier: Apache-2.0

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

/ {
	model = "WP-Rev1";
	compatible = "nordic,wepower,wp-rev1";

	chosen {
        zephyr,console = &uart0;
		zephyr,shell-uart = &uart0;
		//zephyr,uart-mcumgr = &uart0;
		//zephyr,bt-mon-uart = &uart0;
		//zephyr,bt-c2h-uart = &uart0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
        zephyr,entropy = &rng;
        zephyr,i2c = &i2c0;
		zephyr,i2c1 = &i2c1;
		nrf,gpio0 = &gpio0;
		nrf,gpio1 = &gpio1;
		nrf,gpiote = &gpiote;
		nrf,comp = &comp;
	};

	zephyr,user {
		io-channels = <&comp 1>, <&comp 2>;
	};
};



&pinctrl {
	uart0_default: uart0_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 24)>, <NRF_PSEL(UART_RX, 0, 25)>;
		};
	};

	uart0_sleep: uart0_sleep {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 24)>, <NRF_PSEL(UART_RX, 0, 25)>;
			//low-power-enable;
		};
	};

	i2c0_default: i2c0_default {
		group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 29)>, <NRF_PSEL(TWIM_SCL, 0, 30)>;
		};
	};

	i2c0_sleep: i2c0_sleep {
		group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 29)>, <NRF_PSEL(TWIM_SCL, 0, 30)>;
		};
	};

	i2c1_default: i2c1_default {
		group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 16)>, <NRF_PSEL(TWIM_SCL, 0, 15)>;
		};
	};

	i2c1_sleep: i2c1_sleep {
		group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 16)>, <NRF_PSEL(TWIM_SCL, 0, 15)>;
		};
	};
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 0x0000C000>;
		};
		slot0_partition: partition@c000 {
			label = "image-0";
			reg = <0x0000C000 0x00067000>;
		};
		slot1_partition: partition@73000 {
			label = "image-1";
			reg = <0x00073000 0x00067000>;
		};
		scratch_partition: partition@da000 {
			label = "image-scratch";
			reg = <0x000da000 0x0001e000>;
		};

		/*
		 * The flash starting at 0x000f8000 and ending at
		 * 0x000fffff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@f8000 {
			label = "storage";
			reg = <0x000f8000 0x00008000>;
		};
	};
};

&adc {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_1_6";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,input-positive = <NRF_SAADC_AIN1>; /* P0.03 */
		zephyr,resolution = <12>;
	};
};

&comp {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&uart0 {
	compatible = "nordic,nrf-uarte";
	status = "okay";
	current-speed = <115200>;
	pinctrl-0 = <&uart0_default>;
	pinctrl-1 = <&uart0_sleep>;
	pinctrl-names = "default", "sleep";
};

&i2c0 {
	compatible = "nordic,nrf-twim";
	status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;
	pinctrl-0 = <&i2c0_default>;
	pinctrl-1 = <&i2c0_sleep>;
	pinctrl-names = "default", "sleep";
	zephyr,concat-buf-size = <32>;	
};

&i2c1 {
	compatible = "nordic,nrf-twim";
	status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;
	pinctrl-0 = <&i2c1_default>;
	pinctrl-1 = <&i2c1_sleep>;
	pinctrl-names = "default", "sleep";
	zephyr,concat-buf-size = <32>;	
};

/{

	gpio_output {
		compatible = "gpio-leds";
		lis_trig: lis_trigger_pin {
			gpios = <&gpio1 13 0x00>;
			label = "U2 trigger";
		};
		connector4: connector_4_pin {
			gpios = <&gpio0 19 0x00>;
			label = "Connector pin 4";
		};
		connector5: connector_5_pin {
			gpios = <&gpio0 17 0x00>;
			label = "Connector pin 5";
		};
		connector6: connector_6_pin {
			gpios = <&gpio0 21 0x00>;
			label = "Connector pin 6";
		};
		connector7: connector_7_pin {
			gpios = <&gpio0 23 0x00>;
			label = "Connector pin 7";
		};
	};

	gpio_input {
		compatible = "gpio-keys";
		imu_drdy: imu_drdy_pin {
			gpios = <&gpio1 12 0x0>;
			label = "IMU DRDY";
		};
		lps_drdy: lps_drdy_pin {
			gpios = <&gpio0 2 GPIO_OPEN_DRAIN>;
			label = "LPS DRDY";
		};
		polarity: polarity_pin {
			gpios = <&gpio0 13 GPIO_OPEN_DRAIN>;
			label = "Polarity as scope point";
		};
		// vex10: vex10_pin {
		// 	gpios = <&gpio0 03 GPIO_OPEN_DRAIN>;
		// 	label = "VEXT10 Pin";
		// };
	};
};